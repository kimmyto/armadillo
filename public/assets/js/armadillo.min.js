/**
 * @return {undefined}
 */
function detectDevice() {
  if (/Android|webOS|iPhone|iPod|BlackBerry|iPad/i.test(navigator.userAgent)) {
    $("#player").show();
  } else {
    $("#host").show();
  }
}
/**
 * @return {undefined}
 */
window.onload = function() {
  detectDevice();
};
var App;
jQuery(function($) {
  var self = {
    /**
     * @return {undefined}
     */
    init : function() {
      self.socket = io.connect();
      self.bindEvents();
    },
    /**
     * @return {undefined}
     */
    bindEvents : function() {
      self.socket.on("connected", self.Connected);
      self.socket.on("gameCreated", self.gameCreated);
      self.socket.on("joined", self.joined);
      self.socket.on("clicked", self.clicked);
    },
    /**
     * @return {undefined}
     */
    Connected : function() {
      App.mySocketId = self.socket.socket.sessionid;
    },
    /**
     * @param {?} data
     * @return {undefined}
     */
    gameCreated : function(data) {
      App.Host.startGame(data);
    },
    /**
     * @param {?} inplace
     * @return {undefined}
     */
    joined : function(inplace) {
      App[App.myRole].changeLayout(inplace);
    },
    /**
     * @param {Object} walkers
     * @return {undefined}
     */
    clicked : function(walkers) {
      App.Host.clickButton(walkers);
    }
  };
  App = {
    gameId : 0,
    myRole : "",
    mySocketId : "",
    /**
     * @return {undefined}
     */
    init : function() {
      App.bindEvents();
      FastClick.attach(document.body);
    },
    /**
     * @param {string} level
     * @return {undefined}
     */
    endGame : function(level) {
      $("#game").hide();
      $("#getCode").hide();
      $("#menu").hide();
      $("#host").show();
      $("#score").show();
      $("#newScore").html(level + " Points");
    },
    /**
     * @return {undefined}
     */
    restart : function() {
      restartGame();
      $("#host").hide();
      $("#game").show();
    },
    /**
     * @param {string} target
     * @param {number} deepDataAndEvents
     * @return {undefined}
     */
    controller : function(target, deepDataAndEvents) {
      App.$doc.on("touchstart", target, function() {
        App.Player.button(deepDataAndEvents);
      });
      App.$doc.on("touchend", target, function() {
        App.Player.button(deepDataAndEvents);
      });
    },
    /**
     * @return {undefined}
     */
    bindEvents : function() {
      App.$doc = $(document);
      App.$doc.on("click", "#play", App.Host.createGame);
      App.$doc.on("click", "#playAgain", App.restart);
      App.$doc.on("click", "#join", App.Player.onJoin);
      App.controller("#button1", 1);
      App.controller("#button2", 2);
    },
    Host : {
      /**
       * @return {undefined}
       */
      createGame : function() {
        self.socket.emit("createNewGame");
      },
      /**
       * @param {?} data
       * @return {undefined}
       */
      startGame : function(data) {
        App.gameId = data.gameId;
        App.mySocketId = data.mySocketId;
        /** @type {string} */
        App.myRole = "Host";
        App.Host.showCode();
      },
      /**
       * @return {undefined}
       */
      showCode : function() {
        $("#menu").hide();
        $("#getCode").show();
        $("#code").html(App.gameId);
      },
      /**
       * @param {Object} obj
       * @return {undefined}
       */
      clickButton : function(obj) {
        switch(obj.button) {
          case 1:
            button1();
            break;
          case 2:
            button2();
            break;
          case 3:
            button3(obj.angle);
        }
      },
      /**
       * @return {undefined}
       */
      changeLayout : function() {
        $("#host").hide();
        $("#game").show();
        start();
      }
    },
    Player : {
      setNum : 0,
      /**
       * @return {undefined}
       */
      onJoin : function() {
        var message = {
          gameId : $("#input").val()
        };
        self.socket.emit("JoinGame", message);
        /** @type {string} */
        App.myRole = "Player";
      },
      /**
       * @param {?} data
       * @return {undefined}
       */
      changeLayout : function(data) {
        if (self.socket.socket.sessionid === data.mySocketId) {
          /** @type {string} */
          App.myRole = "Player";
          App.gameId = data.gameId;
          $("#connect").hide();
          $("#controller").show();
          offset = $("#joystick").offset();
        }
      },
      /**
       * @param {number} deepDataAndEvents
       * @param {number} options
       * @return {undefined}
       */
      button : function(deepDataAndEvents, options) {
        var data = {
          gameId : App.gameId,
          button : deepDataAndEvents,
          angle : options
        };
        self.socket.emit("pressButton", data);
      }
    }
  };
  self.init();
  App.init();
}($));
